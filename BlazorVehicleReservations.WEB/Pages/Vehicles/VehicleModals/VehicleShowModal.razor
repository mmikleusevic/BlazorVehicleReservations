@inject IVehicleService VehicleService

@if (vehicle != null)
{
    <div class="simple-form">

        <div class="form-group">
            <label for="manufacturer">Manufacturer</label>
            <input disabled="disabled" @bind="@vehicle.Manufacturer" type="text" class="form-control" id="manufacturer" />
        </div>

        <div class="form-group">
            <label for="model">Model</label>
            <input disabled="disabled" @bind="@vehicle.Model" type="text" class="form-control" id="model" />
        </div>

        <div class="form-group">
            <label for="type">Type</label>
            <input disabled="disabled" @bind="@vehicle.Type" type="text" class="form-control" id="type" />
        </div>

        <div class="form-group">
            <label for="color">Color</label>
            <input disabled="disabled" @bind="@vehicle.Color" type="text" class="form-control" id="color" />
        </div>

        <div class="form-group">
            <label for="year">Year</label>
            <input disabled="disabled" @bind="@vehicle.Year" type="number" class="form-control" id="year" />
        </div>
    </div>
}

@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; } = default!;

    [Parameter] public int VehicleId { get; set; }

    VehicleDto vehicle = new VehicleDto();

    protected override async Task OnInitializedAsync()
    {
        vehicle = await VehicleService.GetVehicle(VehicleId);
    }
}
