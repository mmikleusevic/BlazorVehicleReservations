@inject IReservationService ReservationService
@inject IVehicleService VehicleService
@inject IClientService ClientService

<EditForm Model="@reservation" OnValidSubmit="SaveReservation">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="simple-form">
        <div class="form-group">
            <label for="client">Client</label>
            <select disabled="@(clientList == null)" @bind="reservation.ClientId" class="form-select" id="client">
                @if (clientList != null)
                {
                    <option value="Null" selected>Select client</option>
                    @foreach (var client in clientList)
                    {
                        <option value="@client.ClientId">@(client.FName + ' ' + client.LName)</option>
                    }
                }
            </select>
        </div>
        <div class="form-group">
            <label for="vehicle">Vehicle</label>
            <select disabled="@(availableVehicleList == null)" @bind="reservation.VehicleId" class=" form-select" id="vehicle">
                @if (availableVehicleList != null)
                {
                    <option value="Null" selected>Select vehicle</option>
                    @foreach (var vehicle in availableVehicleList)
                    {
                        <option value="@vehicle.VehicleId">@(vehicle.Manufacturer + '-' + vehicle.Model + '-' + vehicle.Color + '-' + vehicle.Year)</option>
                    }
                }
            </select>
        </div>
        <div class="form-group">
            <label for="reservationFrom">Reservation From</label>
            <input @bind="@reservation.ReservedFrom" type="datetime-local" class="form-control" id="reservationFrom" />
        </div>
        <div class="form-group">
            <label for="reservationUntil">Reservation Until</label>
            <input @bind="@reservation.ReservedUntil" type="datetime-local" class="form-control" id="reservationUntil" />
        </div>
    </div>

    <div class="buttonEdit">
        <button type="submit" class="btn btn-primary">Submit</button>
        <button @onclick="ModalInstance.CancelAsync" class="btn btn-secondary">Cancel</button>
    </div>
</EditForm>

@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; } = default!;

    ReservationDto reservation = new ReservationDto();

    List<ClientDto> clientList = new List<ClientDto>();

    List<VehicleDto> availableVehicleList = new List<VehicleDto>();

    protected override async Task OnInitializedAsync()
    {
        clientList = await ClientService.GetAllClients();
        availableVehicleList = await VehicleService.GetAllAvailableVehicles();
    }

    protected async Task SaveReservation()
    {
        reservation.Type = availableVehicleList.FirstOrDefault(a => a.VehicleId == reservation.VehicleId).Type;
        await ReservationService.CreateReservations(reservation);
        await ModalInstance.CloseAsync();
    }
}
