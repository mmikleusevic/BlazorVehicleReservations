@page "/"
@inject IToastPopup ToastPopup

<h3>Reservations</h3>

<button type="submit" class="btn btn-primary" @onclick="@(() => ShowCreateModal())" style="margin:10px 10px">Create</button>
<button type="submit" class="btn btn-secondary" @onclick="ClearSearch" style="margin:10px 10px">Clear Search</button>
@if (editContext != null && reservationSearch != null)
{
    <EditForm EditContext="@editContext" @oninput="ValidateReservationSearch">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <table>
            <thead class="simple-form">
                <tr class="form-group">
                    <th class="col"><OnInputText Placeholder="Reserved From" @bind-Value="reservationSearch.ReservedFrom" /></th>
                    <th class="col"><OnInputText Placeholder="Reserved Until" @bind-Value="reservationSearch.ReservedUntil" /></th>
                    <th class="col"><OnInputText Placeholder="First Name" @bind-Value="reservationSearch.FirstName" /></th>
                    <th class="col"><OnInputText Placeholder="Last Name" @bind-Value="reservationSearch.LastName" /></th>
                    <th class="col"><OnInputText Placeholder="Date of Birth" @bind-Value="reservationSearch.Dob" /></th>
                    <th class="col"><OnInputText Placeholder="Gender" @bind-Value="reservationSearch.Gender" /></th>
                    <th class="col"><OnInputText Placeholder="Country" @bind-Value="reservationSearch.Country" /></th>
                    <th class="col"><OnInputText Placeholder="Manufacturer" @bind-Value="reservationSearch.Manufacturer" /></th>
                    <th class="col"><OnInputText Placeholder="Model" @bind-Value="reservationSearch.Model" /></th>
                    <th class="col"><OnInputText Placeholder="Type" @bind-Value="reservationSearch.Type" /></th>
                    <th class="col"><OnInputText Placeholder="Color" @bind-Value="reservationSearch.Color" /></th>
                    <th class="col"><OnInputText Placeholder="Year" @bind-Value="reservationSearch.Year" /></th>
                </tr>
            </thead>
        </table>   
    </EditForm>
}
@if (reservationsList == null)
{
    <p>Loading...</p>
}
else if (reservationsList != null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th class="col">Reserved from</th>
                <th class="col">Reserved until</th>
                <th class="col">First Name</th>
                <th class="col">Last Name</th>
                <th class="col">Dob</th>
                <th class="col">Gender</th>
                <th class="col">Country</th>
                <th class="col">Manufacturer</th>
                <th class="col">Model</th>
                <th class="col">Type</th>
                <th class="col">Color</th>
                <th class="col">Year</th>
                <th class="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in reservationsList)
            {
                <tr>
                    <td>@(data.ReservedFrom.HasValue ? @data.ReservedFrom.Value.ToShortDateString() : "")</td>
                    <td>@(data.ReservedUntil.HasValue ? data.ReservedUntil.Value.ToShortDateString() : "")</td>
                    <td>@data.FirstName</td>
                    <td>@data.LastName</td>
                    <td>@(data.Dob.HasValue ? @data.Dob.Value.ToShortDateString() : "")</td>
                    <td>@data.Gender</td>
                    <td>@data.Country</td>
                    <td>@data.Manufacturer</td>
                    <td>@data.Model</td>
                    <td>@data.Type</td>
                    <td>@data.Color</td>
                    <td>@data.Year</td>
                    <td>
                        <button type="submit" class="btn btn-primary" @onclick="@(() => ShowReservationModal(data.Id.Value))"><i class="oi oi-eye"></i></button>
                        <button type="submit" class="btn btn-success" @onclick="@(() => ShowEditModal(data.Id.Value))"><i class="oi oi-pencil"></i></button>
                        <button type="submit" class="btn btn-danger" @onclick="@(() => ShowDeleteModal(data.Id.Value))"><i class="oi oi-trash"></i></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}else{
    <p>No data</p>
}

@code {
    [Inject]
    private IReservationService ReservationService { get; set; } = default!;

    [CascadingParameter] private IModalService Modal { get; set; } = default!;

    private List<ReservationDto> reservationsList { get; set; } = default!;

    private ReservationSearch reservationSearch = new ReservationSearch();

    private EditContext editContext { get; set; }

    protected override async Task OnInitializedAsync()
    {
        reservationsList = await ReservationService.GetAllReservations();
        editContext = new EditContext(reservationSearch);
    }

    protected async Task ShowEditModal(int id)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(ReservationDto.Id), id);

        var formModal = Modal.Show<ReservationEditModal>("Edit reservation", parameters);

        var result = await formModal.Result;

        if (!result.Cancelled)
        {
            reservationsList = await ReservationService.GetAllReservations();
        }
    }

    protected async Task ShowDeleteModal(int id)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(ReservationDto.Id), id);

        var formModal = Modal.Show<ReservationDeleteModal>("Delete reservation", parameters);

        var result = await formModal.Result;

        if (!result.Cancelled)
        {
            reservationsList = await ReservationService.GetAllReservations();
        }
    }

    protected async Task ShowCreateModal()
    {
        var formModal = Modal.Show<ReservationCreateModal>("Create reservation");

        var result = await formModal.Result;

        if (!result.Cancelled)
        {
            reservationsList = await ReservationService.GetAllReservations();
        }
    }

    protected void ShowReservationModal(int id)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(ReservationDto.Id), id);

        Modal.Show<ReservationShowModal>("Reservation", parameters);
    }

    protected async Task ValidateReservationSearch()
    {
        var result = editContext.Validate();
        if(result){
            reservationsList = await ReservationService.SearchReservations(reservationSearch);
        }
    }

    protected async Task ClearSearch()
    {
        reservationSearch = new ReservationSearch();
        reservationsList = await ReservationService.GetAllReservations();
    }
}
