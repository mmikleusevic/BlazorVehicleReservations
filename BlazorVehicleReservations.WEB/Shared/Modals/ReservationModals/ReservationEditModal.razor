@using System.ComponentModel.DataAnnotations
@inject IReservationService ReservationService

@if(reservation != null)
{
    <EditForm Model="@reservation" OnValidSubmit="SaveReservation">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="simple-form">          
            <div class="form-group">
                <label for="reservationFrom">Reservation From</label>
                <input @bind="@reservation.ReservedFrom" type="datetime-local" class="form-control" id="reservationFrom" />
            </div>
            <div class="form-group">
                <label for="reservationUntil">Reservation Until</label>
                <input @bind="@reservation.ReservedUntil" type="datetime-local" class="form-control" id="reservationUntil" />
            </div>

            <div class="buttonEdit">
                <button type="submit" class="btn btn-primary">Submit</button>
                <button @onclick="ModalInstance.CancelAsync" class="btn btn-secondary">Cancel</button>
            </div>
        </div>
    </EditForm>
}

@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; } = default!;

    [Parameter] public int Id { get; set; }

    ReservationDto reservation = new ReservationDto();

    protected override async Task OnInitializedAsync()
    {
        reservation = await ReservationService.GetReservation(Id);
    }

    protected async Task SaveReservation()
    {
        await ReservationService.UpdateReservation(reservation, Id);
        await ModalInstance.CloseAsync();

    }
}